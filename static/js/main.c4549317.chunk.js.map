{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Form/Form.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js","components/Form/Form.module.css"],"names":["module","exports","Form","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","styled","span","input","type","pattern","title","placeholder","required","onChange","button","Component","ContactList","contacts","onDeleteContact","list","map","contact","item","onClick","id","Filter","App","filter","formSubmitData","user","uuidv4","find","alert","prevState","filterChange","target","getVisibleContactList","nornalizedFilter","toLowerCase","includes","deleteContact","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,wB,4DCA1BD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,QAAU,6BAA6B,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,4B,8KCG1JC,EAAb,4MACEC,MAAQ,CACNC,KAAM,GACNC,OAAQ,IAHZ,EAMEC,aAAe,SAAAC,GACb,MAAwBA,EAAEC,cAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,KAR5B,EAWEE,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKX,OACzB,EAAKY,SAdT,EAiBEA,MAAQ,WACN,EAAKL,SAAS,CAAEN,KAAM,GAAIC,OAAQ,MAlBtC,4CAqBE,WACE,OACE,uBAAMS,SAAUE,KAAKL,aAArB,UACE,sBAAMM,UAAWC,IAAOC,KAAxB,kBACA,uBACEF,UAAWC,IAAOE,MAClBC,KAAK,OACLjB,KAAK,OACLkB,QAAQ,yHACRC,MAAM,kcACNd,MAAOO,KAAKb,MAAMC,KAClBoB,YAAY,UACZC,UAAQ,EACRC,SAAUV,KAAKV,eAEjB,sBAAMW,UAAWC,IAAOC,KAAxB,oBACA,uBACEF,UAAWC,IAAOE,MAClBC,KAAK,MACLjB,KAAK,SACLkB,QAAQ,yFACRC,MAAM,giBACNC,YAAY,YACZf,MAAOO,KAAKb,MAAME,OAClBoB,UAAQ,EACRC,SAAUV,KAAKV,eAEjB,wBAAQe,KAAK,SAASJ,UAAWC,IAAOS,OAAxC,gCAhDR,GAA0BC,a,gBCAnB,SAASC,EAAT,GAAqD,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,gBACtC,OACE,oBAAId,UAAWC,IAAOc,KAAtB,SACGF,EAASG,KAAI,SAAAC,GACZ,OACE,oBAAqBjB,UAAWC,IAAOiB,KAAvC,SACE,sBAAKlB,UAAWC,IAAOgB,QAAvB,UACE,uBAAMjB,UAAWC,IAAOC,KAAxB,UAA+Be,EAAQ9B,KAAvC,SACA,uBAAMa,UAAWC,IAAOC,KAAxB,cAAgCe,EAAQ7B,UACxC,wBACE+B,QAAS,kBAAML,EAAgBG,EAAQG,KACvCpB,UAAWC,IAAOS,OAFpB,wBAJKO,EAAQG,S,qBCNpB,SAASC,EAAT,GAAoC,IAAnB7B,EAAkB,EAAlBA,MAAOiB,EAAW,EAAXA,SAC7B,OAAO,uBAAOL,KAAK,OAAOZ,MAAOA,EAAOiB,SAAUA,EAAUT,UAAWC,IAAOE,Q,IC2EjEmB,E,4MAxEbpC,MAAQ,CACN2B,SAAU,GAMVU,OAAQ,I,EAgBVC,eAAiB,YAAuB,IAApBrC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAClBqC,EAAO,CAAEL,GAAIM,cAAUvC,OAAMC,UAClB,EAAKF,MAAM2B,SAASc,MAAK,SAAAV,GAAO,OAAIA,EAAQ9B,OAASA,KAEpEyC,MAAM,GAAD,OAAIzC,EAAJ,4BAGP,EAAKM,UAAS,SAAAoC,GACZ,IAAMhB,EAAQ,sBAAOgB,EAAUhB,UAAjB,CAA2BY,IAEzC,OAAO,2BAAKI,GAAZ,IAAuBhB,iB,EAI3BiB,aAAe,SAAAxC,GACb,EAAKG,SAAS,CAAE8B,OAAQjC,EAAEyC,OAAOvC,S,EAGnCwC,sBAAwB,WACtB,MAA6B,EAAK9C,MAA1B2B,EAAR,EAAQA,SACFoB,EADN,EAAkBV,OACcW,cAChC,OAAOrB,EAASU,QAAO,SAAAN,GAAO,OAC5BA,EAAQ9B,KAAK+C,cAAcC,SAASF,O,EAIxCG,cAAgB,SAAAhB,GACd,EAAK3B,UAAS,SAAAoC,GAAS,MAAK,CAC1BhB,SAAUgB,EAAUhB,SAASU,QAAO,SAAAN,GAAO,OAAIA,EAAQG,KAAOA,U,uDA1ClE,WACE,IAAMP,EAAWwB,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAM5B,GAC9B0B,GACFxC,KAAKN,SAAS,CAAEoB,SAAU0B,M,gCAI9B,SAAmBG,EAAWb,GACxB9B,KAAKb,MAAM2B,WAAagB,EAAUhB,UACpCwB,aAAaM,QAAQ,WAAYH,KAAKI,UAAU7C,KAAKb,MAAM2B,a,oBAmC/D,WACE,IAAQU,EAAWxB,KAAKb,MAAhBqC,OACFsB,EAAkB9C,KAAKiC,wBAC7B,OACE,sBAAKhC,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,CAAMH,SAAUE,KAAKyB,iBACrB,0CACA,cAACH,EAAD,CAAQ7B,MAAO+B,EAAQd,SAAUV,KAAK+B,eACtC,cAAClB,EAAD,CACEC,SAAUgC,EACV/B,gBAAiBf,KAAKqC,uB,GAlEdzB,aCMHmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfA/D,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,OAAS,qBAAqB,KAAO,sB","file":"static/js/main.c4549317.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1RzRU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__2Tuq8\",\"contact\":\"ContactList_contact__3ni7Y\",\"list\":\"ContactList_list__3593y\",\"item\":\"ContactList_item__1YHrF\",\"span\":\"ContactList_span__1BzkU\"};","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styled from './Form.module.css';\r\n\r\nexport class Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <span className={styled.span}>Name</span>\r\n        <input\r\n          className={styled.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          value={this.state.name}\r\n          placeholder=\"Tom Red\"\r\n          required\r\n          onChange={this.handleChange}\r\n        />\r\n        <span className={styled.span}>Number</span>\r\n        <input\r\n          className={styled.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          placeholder=\"800-80-00\"\r\n          value={this.state.number}\r\n          required\r\n          onChange={this.handleChange}\r\n        />\r\n        <button type=\"submit\" className={styled.button}>Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styled from './ContactList.module.css';\r\n\r\nexport function ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={styled.list}>\r\n      {contacts.map(contact => {\r\n        return (\r\n          <li key={contact.id} className={styled.item}>\r\n            <div className={styled.contact}>\r\n              <span className={styled.span}>{contact.name} : </span>\r\n              <span className={styled.span}> {contact.number}</span>\r\n              <button\r\n                onClick={() => onDeleteContact(contact.id)}\r\n                className={styled.button}\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n};","import React from 'react';\r\nimport styled from './Filter.module.css';\r\n\r\nexport function Filter({value, onChange}) {\r\n  return <input type=\"text\" value={value} onChange={onChange} className={styled.input}></input>;\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Form } from './components/Form/Form';\nimport { ContactList } from './components/ContactList/ContactList';\nimport { Filter } from './components/Filter/Filter';\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  formSubmitData = ({ name, number }) => {\n    const user = { id: uuidv4(), name, number };\n    const isExists = this.state.contacts.find(contact => contact.name === name);\n    if (isExists) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    this.setState(prevState => {\n      const contacts = [...prevState.contacts, user];\n\n      return { ...prevState, contacts };\n    });\n  };\n\n  filterChange = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getVisibleContactList = () => {\n    const { contacts, filter } = this.state;\n    const nornalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(nornalizedFilter),\n    );\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContactList();\n    return (\n      <div className=\"App\">\n        <h2>Phonebook</h2>\n        <Form onSubmit={this.formSubmitData} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.filterChange} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__3Jh9W\",\"button\":\"Form_button__LR2Gc\",\"span\":\"Form_span__2rcMk\"};"],"sourceRoot":""}